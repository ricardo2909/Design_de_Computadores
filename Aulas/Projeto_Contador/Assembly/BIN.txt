tmp(0) := "0000000000000";	-- Reset:                         	#Reset
tmp(1) := "0101111111110";	-- STA @510                       	#Reset do KEY1
tmp(2) := "0101111111111";	-- STA @511                       	#Reset do KEY0
tmp(3) := "0101111111101";	-- STA @509                       	#Reset do Botao do Reset
tmp(4) := "0100000000000";	-- LDI $0                         	#Carrega o valor 0 no Registrador
tmp(5) := "0101000000000";	-- STA @0                         	#Armazena o valor 0 na posicao 0 da memoria
tmp(6) := "0101100000010";	-- STA @258                       	#Apaga o LED 9
tmp(7) := "0101100000001";	-- STA @257                       	#Apaga o LED 8   
tmp(8) := "0101100000000";	-- STA @256                       	#Apaga os LEDs 7 ate 0
tmp(9) := "0101100100000";	-- STA @288                       	#Armazena o valor 0 no HEX0
tmp(10) := "0101100100001";	-- STA @289                       	#Armazena o valor 0 no HEX1
tmp(11) := "0101100100010";	-- STA @290                       	#Armazena o valor 0 no HEX2
tmp(12) := "0101100100011";	-- STA @291                       	#Armazena o valor 0 no HEX3
tmp(13) := "0101100100100";	-- STA @292                       	#Armazena o valor 0 no HEX4
tmp(14) := "0101100100101";	-- STA @293                       	#Armazena o valor 0 no HEX5
tmp(15) := "0101000111111";	-- STA @63                        	#Armazena o valor 0 na posicao 63 da memoria
tmp(16) := "0101000111110";	-- STA @62                        	#Armazena o valor 0 na posicao 62 da memoria
tmp(17) := "0101000111101";	-- STA @61                        	#Armazena o valor 0 na posicao 61 da memoria
tmp(18) := "0101000111100";	-- STA @60                        	#Armazena o valor 0 na posicao 60 da memoria
tmp(19) := "0101000111011";	-- STA @59                        	#Armazena o valor 0 na posicao 59 da memoria
tmp(20) := "0101000111010";	-- STA @58                        	#Armazena o valor 0 na posicao 58 da memoria
tmp(21) := "0101000000010";	-- STA @2                         	#Armazena o valor 0 na posicao 2 da memoria
tmp(22) := "0101000000011";	-- STA @3                         	#Armazena o valor 0 na posicao 3 da memoria
tmp(23) := "0101000000100";	-- STA @4                         	#Armazena o valor 0 na posicao 4 da memoria
tmp(24) := "0101000000101";	-- STA @5                         	#Armazena o valor 0 na posicao 5 da memoria
tmp(25) := "0101000000110";	-- STA @6                         	#Armazena o valor 0 na posicao 6 da memoria
tmp(26) := "0101000000111";	-- STA @7                         	#Armazena o valor 0 na posicao 7 da memoria
tmp(27) := "0100000000001";	-- LDI $1                         	#Carrega o valor 1 no Registrador
tmp(28) := "0101000000001";	-- STA @1                         	#Armazena o valor 1 na posicao 1 da memoria
tmp(29) := "0100000001010";	-- LDI $10                        	#Carrega o valor 10 no Registrador
tmp(30) := "0101000001010";	-- STA @10                        	#Armazena o valor 10 na posicao 10 da memoria
tmp(31) := "0000000000000";	-- Inicio:                        	#Label de inicio
tmp(32) := "0001101100001";	-- LDA @353                       	#Carrega o valor do KEY1
tmp(33) := "1000000000000";	-- CEQ @0                         	#Compara o valor do KEY1 com 0
tmp(34) := "0111000011111";	-- JEQ @Inicio                    	#Se o valor do KEY1 for 0, volta para o inicio
tmp(35) := "1001001000010";	-- JSR @Limite                    	#Se o valor do KEY1 for diferente de 0, chama a Sub rotina Limite
tmp(36) := "0001000000000";	-- LDA @0                         	#Carrega o valor 0 no Registrador
tmp(37) := "0101100100000";	-- STA @288                       	#Armazena o valor 0 no HEX0
tmp(38) := "0101100100001";	-- STA @289                       	#Armazena o valor 0 no HEX1
tmp(39) := "0101100100010";	-- STA @290                       	#Armazena o valor 0 no HEX2
tmp(40) := "0101100100011";	-- STA @291                       	#Armazena o valor 0 no HEX3
tmp(41) := "0101100100100";	-- STA @292                       	#Armazena o valor 0 no HEX4
tmp(42) := "0101100100101";	-- STA @293                       	#Armazena o valor 0 no HEX5
tmp(43) := "0101111111111";	-- STA @511                       	#Reset do KEY0
tmp(44) := "0000000000000";	-- Contador:                      	#Label do Contador
tmp(45) := "0000000000000";	-- NOP                            	#NOP
tmp(46) := "0001101100000";	-- LDA @352                       	#Carrega o valor do KEY0
tmp(47) := "1000000000000";	-- CEQ @0                         	#Compara o valor do KEY0 com 0
tmp(48) := "0111001000000";	-- JEQ @LOOP                      	#Se o valor do KEY0 for 0, vai para a label LOOP
tmp(49) := "1001001111011";	-- JSR @Incrementa                	#Se o valor do KEY0 for diferente de 0, chama a Sub rotina Incrementa
tmp(50) := "0000000000000";	-- NOP                            	#NOP
tmp(51) := "0001000000010";	-- LDA @2                         	#Carrega o valor da posicao 2 da memoria no Registrador
tmp(52) := "0101100100000";	-- STA @288                       	#Armazena o valor da posicao 2 da memoria no HEX0
tmp(53) := "0001000000011";	-- LDA @3                         	#Carrega o valor da posicao 3 da memoria no Registrador
tmp(54) := "0101100100001";	-- STA @289                       	#Armazena o valor da posicao 3 da memoria no HEX1
tmp(55) := "0001000000100";	-- LDA @4                         	#Carrega o valor da posicao 4 da memoria no Registrador
tmp(56) := "0101100100010";	-- STA @290                       	#Armazena o valor da posicao 4 da memoria no HEX2
tmp(57) := "0001000000101";	-- LDA @5                         	#Carrega o valor da posicao 5 da memoria no Registrador
tmp(58) := "0101100100011";	-- STA @291                       	#Armazena o valor da posicao 5 da memoria no HEX3
tmp(59) := "0001000000110";	-- LDA @6                         	#Carrega o valor da posicao 6 da memoria no Registrador
tmp(60) := "0101100100100";	-- STA @292                       	#Armazena o valor da posicao 6 da memoria no HEX4
tmp(61) := "0001000000111";	-- LDA @7                         	#Carrega o valor da posicao 7 da memoria no Registrador
tmp(62) := "0101100100101";	-- STA @293                       	#Armazena o valor da posicao 7 da memoria no HEX5
tmp(63) := "1001010110100";	-- JSR @Comparador                	#Chama a Sub rotina Comparador
tmp(64) := "0000000000000";	-- LOOP:                          	#Label LOOP
tmp(65) := "0110000101100";	-- JMP @Contador                  	#Volta para a label Contador
tmp(66) := "0000000000000";	-- Limite:                        	#Label Limite
tmp(67) := "0101111111110";	-- STA @510                       	#Reset do KEY1
tmp(68) := "0000000000000";	-- Unidade:                       	#Label Unidade
tmp(69) := "0001101000000";	-- LDA @320                       	#Carrega o valor das chaves SW (0 - 7) no Registrador
tmp(70) := "0101100100000";	-- STA @288                       	#Armazena o valor das chaves SW (0 - 7) no HEX0
tmp(71) := "0001101100001";	-- LDA @353                       	#Carrega o valor do KEY1
tmp(72) := "1000000000000";	-- CEQ @0                         	#Compara o valor do KEY1 com 0
tmp(73) := "0111001000100";	-- JEQ @Unidade                   	#Se o valor do KEY1 for 0, volta para a label Unidade
tmp(74) := "0101111111110";	-- STA @510                       	#Reset do KEY1
tmp(75) := "0001101000000";	-- LDA @320                       	#Carrega o valor das chaves SW (0 - 7) no Registrador
tmp(76) := "0101000111111";	-- STA @63                        	#Armazena o valor das chaves SW (0 - 7) na posicao 63 da memoria
tmp(77) := "0000000000000";	-- Dezena:                        	#Label Dezena
tmp(78) := "0001101000000";	-- LDA @320                       	#Carrega o valor das chaves SW (0 - 7) no Registrador
tmp(79) := "0101100100001";	-- STA @289                       	#Armazena o valor das chaves SW (0 - 7) no HEX1
tmp(80) := "0001101100001";	-- LDA @353                       	#Carrega o valor do KEY1
tmp(81) := "1000000000000";	-- CEQ @0                         	#Compara o valor do KEY1 com 0
tmp(82) := "0111001001101";	-- JEQ @Dezena                    	#Se o valor do KEY1 for 0, volta para a label Dezena
tmp(83) := "0101111111110";	-- STA @510                       	#Reset do KEY1
tmp(84) := "0001101000000";	-- LDA @320                       	#Carrega o valor das chaves SW (0 - 7) no Registrador
tmp(85) := "0101000111110";	-- STA @62                        	#Armazena o valor das chaves SW (0 - 7) na posicao 62 da memoria
tmp(86) := "0000000000000";	-- Centena:                       	#Label Centena
tmp(87) := "0001101000000";	-- LDA @320                       	#Carrega o valor das chaves SW (0 - 7) no Registrador
tmp(88) := "0101100100010";	-- STA @290                       	#Armazena o valor das chaves SW (0 - 7) no HEX2
tmp(89) := "0001101100001";	-- LDA @353                       	#Carrega o valor do KEY1
tmp(90) := "1000000000000";	-- CEQ @0                         	#Compara o valor do KEY1 com 0
tmp(91) := "0111001010110";	-- JEQ @Centena                   	#Se o valor do KEY1 for 0, volta para a label Centena
tmp(92) := "0101111111110";	-- STA @510                       	#Reset do KEY1
tmp(93) := "0001101000000";	-- LDA @320                       	#Carrega o valor das chaves SW (0 - 7) no Registrador
tmp(94) := "0101000111101";	-- STA @61                        	#Armazena o valor das chaves SW (0 - 7) na posicao 61 da memoria
tmp(95) := "0000000000000";	-- Milhar:                        	#Label Milhar
tmp(96) := "0001101000000";	-- LDA @320                       	#Carrega o valor das chaves SW (0 - 7) no Registrador
tmp(97) := "0101100100011";	-- STA @291                       	#Armazena o valor das chaves SW (0 - 7) no HEX3
tmp(98) := "0001101100001";	-- LDA @353                       	#Carrega o valor do KEY1
tmp(99) := "1000000000000";	-- CEQ @0                         	#Compara o valor do KEY1 com 0
tmp(100) := "0111001011111";	-- JEQ @Milhar                    	#Se o valor do KEY1 for 0, volta para a label Milhar
tmp(101) := "0101111111110";	-- STA @510                       	#Reset do KEY1
tmp(102) := "0001101000000";	-- LDA @320                       	#Carrega o valor das chaves SW (0 - 7) no Registrador
tmp(103) := "0101000111100";	-- STA @60                        	#Armazena o valor das chaves SW (0 - 7) na posicao 60 da memoria
tmp(104) := "0000000000000";	-- DezMilhar:                     	#Label DezMilhar
tmp(105) := "0001101000000";	-- LDA @320                       	#Carrega o valor das chaves SW (0 - 7) no Registrador
tmp(106) := "0101100100100";	-- STA @292                       	#Armazena o valor das chaves SW (0 - 7) no HEX4
tmp(107) := "0001101100001";	-- LDA @353                       	#Carrega o valor do KEY1
tmp(108) := "1000000000000";	-- CEQ @0                         	#Compara o valor do KEY1 com 0 
tmp(109) := "0111001101000";	-- JEQ @DezMilhar                 	#Se o valor do KEY1 for 0, volta para a label DezMilhar
tmp(110) := "0101111111110";	-- STA @510                       	#Reset do KEY1
tmp(111) := "0001101000000";	-- LDA @320                       	#Carrega o valor das chaves SW (0 - 7) no Registrador
tmp(112) := "0101000111011";	-- STA @59                        	#Armazena o valor das chaves SW (0 - 7) na posicao 59 da memoria
tmp(113) := "0000000000000";	-- CenMilhar:                     	#Label CenMilhar
tmp(114) := "0001101000000";	-- LDA @320                       	#Carrega o valor das chaves SW (0 - 7) no Registrador
tmp(115) := "0101100100101";	-- STA @293                       	#Armazena o valor das chaves SW (0 - 7) no HEX5
tmp(116) := "0001101100001";	-- LDA @353                       	#Carrega o valor do KEY1
tmp(117) := "1000000000000";	-- CEQ @0                         	#Compara o valor do KEY1 com 0
tmp(118) := "0111001110001";	-- JEQ @CenMilhar                 	#Se o valor do KEY1 for 0, volta para a label CenMilhar
tmp(119) := "0101111111110";	-- STA @510                       	#Reset do KEY1
tmp(120) := "0001101000000";	-- LDA @320                       	#Carrega o valor das chaves SW (0 - 7) no Registrador
tmp(121) := "0101000111010";	-- STA @58                        	#Armazena o valor das chaves SW (0 - 7) na posicao 58 da memoria
tmp(122) := "1010000000000";	-- RET                            	#Retorna Para a Sub Rotina Limite
tmp(123) := "0000000000000";	-- Incrementa:                    	#Label Incrementa
tmp(124) := "0101111111111";	-- STA @511                       	#Reset do KEY0
tmp(125) := "0001000000010";	-- LDA @2                         	#Carrega o valor da posicao 2 da memoria no Registrador
tmp(126) := "0010000000001";	-- SOMA @1                        	#Soma o valor da posicao 1 da memoria com o valor do Registrador
tmp(127) := "1000000001010";	-- CEQ @10                        	#Compara o valor do Registrador com 10
tmp(128) := "0111010000011";	-- JEQ @Dez                       	#Se o valor do Registrador for 10, vai para a label Dez
tmp(129) := "0101000000010";	-- STA @2                         	#Armazena o valor do Registrador na posicao 2 da memoria
tmp(130) := "1010000000000";	-- RET                            	#Retorna Para a Sub Rotina Incrementa
tmp(131) := "0000000000000";	-- Dez:                           	#Label Dez
tmp(132) := "0001000000000";	-- LDA @0                         	#Carrega o valor da posicao 0 da memoria no Registrador
tmp(133) := "0101000000010";	-- STA @2                         	#Armazena o valor do Registrador na posicao 2 da memoria
tmp(134) := "0001000000011";	-- LDA @3                         	#Carrega o valor da posicao 3 da memoria no Registrador
tmp(135) := "0010000000001";	-- SOMA @1                        	#Soma o valor da posicao 1 da memoria com o valor do Registrador
tmp(136) := "1000000001010";	-- CEQ @10                        	#Compara o valor do Registrador com 10
tmp(137) := "0111010001100";	-- JEQ @Cen                       	#Se o valor do Registrador for 10, vai para a label Cen
tmp(138) := "0101000000011";	-- STA @3                         	#Armazena o valor do Registrador na posicao 3 da memoria
tmp(139) := "1010000000000";	-- RET                            	#Retorna Para a Sub Rotina Incrementa
tmp(140) := "0000000000000";	-- Cen:                           	#Label Cen
tmp(141) := "0001000000000";	-- LDA @0                         	#Carrega o valor da posicao 0 da memoria no Registrador
tmp(142) := "0101000000011";	-- STA @3                         	#Armazena o valor do Registrador na posicao 3 da memoria
tmp(143) := "0001000000100";	-- LDA @4                         	#Carrega o valor da posicao 4 da memoria no Registrador
tmp(144) := "0010000000001";	-- SOMA @1                        	#Soma o valor da posicao 1 da memoria com o valor do Registrador
tmp(145) := "1000000001010";	-- CEQ @10                        	#Compara o valor do Registrador com 10
tmp(146) := "0111010010101";	-- JEQ @Mil                       	#Se o valor do Registrador for 10, vai para a label Mil
tmp(147) := "0101000000100";	-- STA @4                         	#Armazena o valor do Registrador na posicao 4 da memoria
tmp(148) := "1010000000000";	-- RET                            	#Retorna Para a Sub Rotina Incrementa
tmp(149) := "0000000000000";	-- Mil:                           	#Label Mil
tmp(150) := "0001000000000";	-- LDA @0                         	#Carrega o valor da posicao 0 da memoria no Registrador
tmp(151) := "0101000000100";	-- STA @4                         	#Armazena o valor do Registrador na posicao 4 da memoria
tmp(152) := "0001000000101";	-- LDA @5                         	#Carrega o valor da posicao 5 da memoria no Registrador
tmp(153) := "0010000000001";	-- SOMA @1                        	#Soma o valor da posicao 1 da memoria com o valor do Registrador
tmp(154) := "1000000001010";	-- CEQ @10                        	#Compara o valor do Registrador com 10
tmp(155) := "0111010011110";	-- JEQ @DezM                      	#Se o valor do Registrador for 10, vai para a label DezM
tmp(156) := "0101000000101";	-- STA @5                         	#Armazena o valor do Registrador na posicao 5 da memoria
tmp(157) := "1010000000000";	-- RET                            	#Retorna Para a Sub Rotina Incrementa
tmp(158) := "0000000000000";	-- DezM:                          	#Label DezM
tmp(159) := "0001000000000";	-- LDA @0                         	#Carrega o valor da posicao 0 da memoria no Registrador
tmp(160) := "0101000000101";	-- STA @5                         	#Armazena o valor do Registrador na posicao 5 da memoria
tmp(161) := "0001000000110";	-- LDA @6                         	#Carrega o valor da posicao 6 da memoria no Registrador
tmp(162) := "0010000000001";	-- SOMA @1                        	#Soma o valor da posicao 1 da memoria com o valor do Registrador
tmp(163) := "1000000001010";	-- CEQ @10                        	#Compara o valor do Registrador com 10
tmp(164) := "0111010100111";	-- JEQ @CenM                      	#Se o valor do Registrador for 10, vai para a label CenM
tmp(165) := "0101000000110";	-- STA @6                         	#Armazena o valor do Registrador na posicao 6 da memoria
tmp(166) := "1010000000000";	-- RET                            	#Retorna Para a Sub Rotina Incrementa
tmp(167) := "0000000000000";	-- CenM:                          	#Label CenM
tmp(168) := "0001000000000";	-- LDA @0                         	#Carrega o valor da posicao 0 da memoria no Registrador
tmp(169) := "0101000000110";	-- STA @6                         	#Armazena o valor do Registrador na posicao 6 da memoria
tmp(170) := "0001000000111";	-- LDA @7                         	#Carrega o valor da posicao 7 da memoria no Registrador
tmp(171) := "0010000000001";	-- SOMA @1                        	#Soma o valor da posicao 1 da memoria com o valor do Registrador
tmp(172) := "1000000001010";	-- CEQ @10                        	#Compara o valor do Registrador com 10
tmp(173) := "0111010110000";	-- JEQ @Fim                       	#Se o valor do Registrador for 10, vai para a label Fim
tmp(174) := "0101000000111";	-- STA @7                         	#Armazena o valor do Registrador na posicao 7 da memoria
tmp(175) := "1010000000000";	-- RET                            	#Retorna Para a Sub Rotina Incrementa
tmp(176) := "0000000000000";	-- Fim:                           	#Label Fim
tmp(177) := "0001000000000";	-- LDA @0                         	#Carrega o valor da posicao 0 da memoria no Registrador
tmp(178) := "0101000000111";	-- STA @7                         	#Armazena o valor do Registrador na posicao 7 da memoria
tmp(179) := "1010000000000";	-- RET                            	#Retorna Para a Sub Rotina Incrementa
tmp(180) := "0000000000000";	-- Comparador:                    	#Label Comparador
tmp(181) := "0001000111111";	-- LDA @63                        	#Carrega o valor da posicao 63 da memoria no Registrador
tmp(182) := "1000000000010";	-- CEQ @2                         	#Compara o valor do Registrador com o valor da posicao 2 da memoria
tmp(183) := "0111010111001";	-- JEQ @CompDez                   	#Se o valor do Registrador for igual ao valor da posicao 2 da memoria, vai para a label CompDez
tmp(184) := "1010000000000";	-- RET                            	#Retorna Para a Sub Rotina Comparador
tmp(185) := "0000000000000";	-- CompDez:                       	#Label CompDez
tmp(186) := "0001000111110";	-- LDA @62                        	#Carrega o valor da posicao 62 da memoria no Registrador
tmp(187) := "1000000000011";	-- CEQ @3                         	#Compara o valor do Registrador com o valor da posicao 3 da memoria
tmp(188) := "0111010111110";	-- JEQ @CompCen                   	#Se o valor do Registrador for igual ao valor da posicao 3 da memoria, vai para a label CompCen
tmp(189) := "1010000000000";	-- RET                            	#Retorna Para a Sub Rotina Comparador
tmp(190) := "0000000000000";	-- CompCen:                       	#Label CompCen
tmp(191) := "0001000111101";	-- LDA @61                        	#Carrega o valor da posicao 61 da memoria no Registrador
tmp(192) := "1000000000100";	-- CEQ @4                         	#Compara o valor do Registrador com o valor da posicao 4 da memoria
tmp(193) := "0111011000011";	-- JEQ @CompMil                   	#Se o valor do Registrador for igual ao valor da posicao 4 da memoria, vai para a label CompMil
tmp(194) := "1010000000000";	-- RET                            	#Retorna Para a Sub Rotina Comparador
tmp(195) := "0000000000000";	-- CompMil:                       	#Label CompMil
tmp(196) := "0001000111100";	-- LDA @60                        	#Carrega o valor da posicao 60 da memoria no Registrador
tmp(197) := "1000000000101";	-- CEQ @5                         	#Compara o valor do Registrador com o valor da posicao 5 da memoria
tmp(198) := "0111011001000";	-- JEQ @CompDezM                  	#Se o valor do Registrador for igual ao valor da posicao 5 da memoria, vai para a label CompDezM
tmp(199) := "1010000000000";	-- RET                            	#Retorna Para a Sub Rotina Comparador
tmp(200) := "0000000000000";	-- CompDezM:                      	#Label CompDezM
tmp(201) := "0001000111011";	-- LDA @59                        	#Carrega o valor da posicao 59 da memoria no Registrador
tmp(202) := "1000000000110";	-- CEQ @6                         	#Compara o valor do Registrador com o valor da posicao 6 da memoria
tmp(203) := "0111011001101";	-- JEQ @CompCenM                  	#Se o valor do Registrador for igual ao valor da posicao 6 da memoria, vai para a label CompCenM
tmp(204) := "1010000000000";	-- RET                            	#Retorna Para a Sub Rotina Comparador
tmp(205) := "0000000000000";	-- CompCenM:                      	#Label CompCenM
tmp(206) := "0001000111010";	-- LDA @58                        	#Carrega o valor da posicao 58 da memoria no Registrador
tmp(207) := "1000000000111";	-- CEQ @7                         	#Compara o valor do Registrador com o valor da posicao 7 da memoria
tmp(208) := "0111011010010";	-- JEQ @Acabou                    	#Se o valor do Registrador for igual ao valor da posicao 7 da memoria, vai para a label Acabou
tmp(209) := "1010000000000";	-- RET                            	#Retorna Para a Sub Rotina Comparador
tmp(210) := "0000000000000";	-- Acabou:                        	#Label Acabou
tmp(211) := "0100000000001";	-- LDI @1                         	#Carrega o valor 1 no Registrador
tmp(212) := "0101100000010";	-- STA @258                       	#Ascende o LED 9
tmp(213) := "0101100000001";	-- STA @257                       	#Ascende o LED 8
tmp(214) := "0100011111111";	-- LDI $255                       	#Carrega o valor 255 no Registrador
tmp(215) := "0101100000000";	-- STA @256                       	#Ascende os LEDs 7 a 0
tmp(216) := "0001101100100";	-- LDA @356                       	#Carrega o valor do botao do Reset no Registrador
tmp(217) := "1000000000000";	-- CEQ @0                         	#Compara o valor do Registrador com 0
tmp(218) := "0111011010010";	-- JEQ @Acabou                    	#Se o valor do Registrador for 0, vai para a label Acabou
tmp(219) := "0110000000000";	-- JMP @Reset                     	#Se o valor do Registrador for diferente de 0, vai para a label Reset
