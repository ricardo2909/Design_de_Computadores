NOP
STA @510                       #Limpa leitura KEY1
STA @508                       #Limpa leitura KEY0
STA @509                       #Limpa leitura Reset 
LDI R0, $0                     #Carrega 0 no acumulador
STA R0, @0                     #Salva 0 no endereço 0 da RAM   
LDI R0, $1                     #Carrega 1 no acumulador
STA R0, @1                     #Salva o valor de R0 no endereço 1 da RAM
LDI R0, $2                     #Carrega 2 em R0
STA R0, @2                     #Salva o valor de R0 no endereço 2 da RAM
LDI R0, $3                     #Carrega 3 em R0 
STA R0, @3                     #Salva o valor de R0 no endereço 3 da RAM
LDI R0, $4                     #Carrega 4 em R0
STA R0, @4                     #Salva o valor de R0 no endereço 4 da RAM
LDI R0, $5                     #Carrega 5 em R0
STA R0, @5                     #Salva o valor de R0 no endereço 5 da RAM
LDI R0, $6                     #Carrega 6 em R0 
STA R0, @6                     #Salva o valor de R0 no endereço 6 da RAM
LDI R0, $7                     #Carrega 7 em R0    
STA R0, @7                     #Salva o valor de R0 no endereço 7 da RAM
LDI R0, $8                     #Carrega 8 em R0
STA R0, @8                     #Salva o valor de R0 no endereço 8 da RAM
LDI R0, $9                     #Carrega 9 em R0
STA R0, @9                     #Salva o valor de R0 no endereço 9 da RAM
LDI R0, $10                    #Carrega 10 em R0             
STA R0, @10                    #Salva o valor de R0 no endereço 10 da RAM
LDI R0, $11                    #Carrega 11 em R0  
STA R0, @11                    #Salva o valor de R0 no endereço 11 da RAM
LDI R0, $12                    #Carrega 12 em R0
STA R0, @12                    #Salva o valor de R0 no endereço 12 da RAM
LDI R0, $13                    #Carrega 13 em R0
STA R0, @13                    #Salva o valor de R0 no endereço 13 da RAM
LDI R0, $14                    #Carrega 14 em R0
STA R0, @14                    #Salva o valor de R0 no endereço 14 da RAM
LDI R0, $15                    #Carrega 15 em R0  
STA R0, @15                    #Salva o valor de R0 no endereço 15 da RAM
LDA R0, @0                     #Carrega o valor do endereço 0 da RAM em R0
STA R0, @258                   #Apaga o LED 9
STA R0, @257                   #Apaga o LED 8
STA R0, @256                   #Apaga os LEDs 7 a 0 
STA R0, @288                   #Zera o HEX 0
STA R0, @289                   #Zera o HEX 1
STA R0, @290                   #Zera o HEX 2
STA R0, @291                   #Zera o HEX 3
STA R0, @292                   #Zera o HEX 4
STA R0, @293                   #Zera o HEX 5
STA R0, @16                    #Zera o endereço 0 da RAM (valor atual das unidades de segundos)
STA R0, @17                    #Zera o endereço 1 da RAM (valor atual das dezenas de segundos)
STA R0, @18                    #Zera o endereço 2 da RAM (valor atual das unidades de minutos) 
STA R0, @19                    #Zera o endereço 3 da RAM (valor atual das dezenas de minutos) 
STA R0, @20                    #Zera o endereço 4 da RAM (valor atual das unidades de horas)
STA R0, @21                    #Zera o endereço 5 da RAM (valor atual das dezenas de horas)
NOP
LDA R0, @353                   #Carrega o valor do KEY1 em R0
CEQ R0, @0                     #Compara o valor de R0 com a posição 0 (0)
JEQ @57           #Se for igual, pula para NKEY1
JSR @186           #Se for diferente, pula para SETHora
NOP
LDA R0, @357                   #Carrega o valor do CLOCK em R0
CEQ R0, @0                     #Compara o valor de R0 com a posição 0 (0)
JEQ @74           #Se for igual, pula para NCLOCK
JSR @79           #Se for diferente, pula para Incremento
LDA R0, @16                    #Carrega o valor do endereço 16 da RAM em R0 (valor atual das unidades de segundos)            
STA R0, @288                   #Salva o valor do R0 no HEX 0  
LDA R0, @17                    #Carrega o valor do endereço 17 da RAM em R0 (valor atual das dezenas de segundos)
STA R0, @289                   #Salva o valor do R0 no HEX 1   
LDA R0, @18                    #Carrega o valor do endereço 18 da RAM em R0 (valor atual das unidades de minutos)
STA R0, @290                   #Salva o valor do R0 no HEX 2 
LDA R0, @19                    #Carrega o valor do endereço 19 da RAM em R0 (valor atual das dezenas de minutos) 
STA R0, @291                   #Salva o valor do R0 no HEX 3
LDA R0, @20                    #Carrega o valor do endereço 20 da RAM em R0 (valor atual das unidades de horas)
STA R0, @292                   #Salva o valor do R0 no HEX 4 
LDA R0, @21                    #Carrega o valor do endereço 21 da RAM em R0 (valor atual das dezenas de horas) 
STA R0, @293                   #Salva o valor do R0 no HEX 5
NOP
LDA R0, @356                   #Carrega o valor do RESET em R0            
CEQ R0, @1                     #Compara o valor de R0 com a posição 1 (1)
JEQ @0           #Se for igual, pula para Reset
JMP @52           #Se for diferente, pula para Start 
NOP
STA R0, @508                   #Salva o valor do endereço 508 (limpa clock) da RAM em R0
NOP
LDA R1, @16                    #Carrega o valor do endereço 16 da RAM em R1 (valor atual das unidades de segundos)
SOMA R1, @1                    #Soma o valor de R1 com a posição 1 (1)
CEQ R1, @10                    #Compara o valor de R1 com a posição 10 (10)
JEQ @91           #Se for igual, pula para DezSeg (Incremento das dezenas de segundos)
STA R1, @16                    #Se o valor de R1 não for 10, salva o valor de R1 no endereço 16 da RAM (valor atual das unidades de segundos)      
LDA R0, @352                   #Carrega o valor do KEY0 em R0
CEQ R0, @1                     #Compara o valor de R0 com a posição 1 (1)
JEQ @216           #Se for igual, pula para SETSeg (Setar segundos)
RET
NOP
LDA R1, @0                     #Carrega o valor do endereço 0 da RAM em R1 (valor atual das unidades de segundos)
STA R1, @16                    #Salva o valor do R1 no endereço 16 da RAM (valor atual das unidades de segundos)
LDA R1, @17                    #Carrega o valor do endereço 17 da RAM em R1 (valor atual das dezenas de segundos)
SOMA R1, @1                    #Soma o valor de R1 com a posição 1 (1) 
CEQ R1, @6                     #Compara o valor de R1 com a posição 6 (6)
JEQ @178           #Se for igual, pula para ZeroS (Zera segundos)
STA R1, @17                    #Se o valor de R1 não for 6, salva o valor de R1 no endereço 17 da RAM (valor atual das dezenas de segundos)       
LDA R0, @352                   #Carrega o valor do KEY0 em R0
CEQ R0, @1                     #Compara o valor de R0 com a posição 1 (1)
JEQ @216           #Se for igual, pula para SETSeg (Setar segundos)
RET
NOP
LDA R1, @18                    #Carrega o valor do endereço 18 da RAM em R1 (valor atual das unidades de minutos)
SOMA R1, @1                    #Soma o valor de R1 com a posição 1 (1)
CEQ R1, @10                    #Compara o valor de R1 com a posição 10 (10)
JEQ @113           #Se for igual, pula para DezMin (Incremento das dezenas de minutos)
STA R1, @18                    #Se o valor de R1 não for 10, salva o valor de R1 no endereço 18 da RAM (valor atual das unidades de minutos)
LDA R0, @352                   #Carrega o valor do KEY0 em R0
CEQ R0, @1                     #Compara o valor de R0 com a posição 1 (1)
JEQ @201           #Se for igual, pula para SETMin (Setar minutos)
RET
NOP
LDA R1, @0                     #Carrega o valor do endereço 0 da RAM em R1 (0)
STA R1, @18                    #Salva o valor do R1 no endereço 18 da RAM (valor atual das unidades de minutos)
LDA R1, @19                    #Carrega o valor do endereço 19 da RAM em R1 (valor atual das dezenas de minutos)
SOMA R1, @1                    #Soma o valor de R1 com a posição 1 (1)
CEQ R1, @6                     #Compara o valor de R1 com a posição 6 (6)
JEQ @170           #Se for igual, pula para ZeroM (Zera minutos)
STA R1, @19                    #Se o valor de R1 não for 6, salva o valor de R1 no endereço 19 da RAM (valor atual das dezenas de minutos)
LDA R0, @352                   #Carrega o valor do KEY0 em R0
CEQ R0, @1                     #Compara o valor de R0 com a posição 1 (1)
JEQ @201           #Se for igual, pula para SETMin (Setar minutos)
RET
NOP
LDA R1, @21                    #Carrega o valor do endereço 21 da RAM em R1 (valor atual das dezenas de horas)
CEQ R1, @2                     #Compara o valor de R1 com a posição 2 (2)
JEQ @138           #Se for igual, pula para vinte (Incremento das dezenas de horas)
LDA R1, @20                    #Carrega o valor do endereço 20 da RAM em R1 (valor atual das unidades de horas)
SOMA R1, @1                    #Soma o valor de R1 com a posição 1 (1)
CEQ R1, @10                    #Compara o valor de R1 com a posição 10 (10)
JEQ @148           #Se for igual, pula para DezHora (Incremento das dezenas de horas)
STA R1, @20                    #Se o valor de R1 não for 10, salva o valor de R1 no endereço 20 da RAM (valor atual das unidades de horas)
LDA R0, @352                   #Carrega o valor do KEY0 em R0
CEQ R0, @1                     #Compara o valor de R0 com a posição 1 (1)
JEQ @186           #Se for igual, pula para SETHora (Setar horas)
RET
NOP
LDA R1, @20                    #Carrega o valor do endereço 20 da RAM em R1 (valor atual das unidades de horas)
SOMA R1, @1                    #Soma o valor de R1 com a posição 1 (1)
CEQ R1, @4                     #Compara o valor de R1 com a posição 4 (4)
JEQ @158           #Se for igual, pula para ZeroH (Zera horas)
STA R1, @20                    #Se o valor de R1 não for 4, salva o valor de R1 no endereço 20 da RAM (valor atual das unidades de horas)
LDA R0, @352                   #Carrega o valor do KEY0 em R0
CEQ R0, @1                     #Compara o valor de R0 com a posição 1 (1)
JEQ @186           #Se for igual, pula para SETHora (Setar horas)
RET
NOP
LDA R1, @0                     #Carrega o valor do endereço 0 da RAM em R1 (0)
STA R1, @20                    #Salva o valor do R1 no endereço 20 da RAM (valor atual das unidades de horas)
LDA R1, @21                    #Carrega o valor do endereço 21 da RAM em R1 (valor atual das dezenas de horas)
SOMA R1, @1                    #Soma o valor de R1 com a posição 1 (1)
STA R1, @21                    #Salva o valor do R1 no endereço 21 da RAM (valor atual das dezenas de horas)
LDA R0, @352                   #Carrega o valor do KEY0 em R0
CEQ R0, @1                     #Compara o valor de R0 com a posição 1 (1)
JEQ @186           #Se for igual, pula para SETHora (Setar horas)
RET
NOP
LDA R1, @0                     #Carrega o valor do endereço 0 da RAM em R1 (0)
STA R1, @21                    #Salva o valor do R1 no endereço 21 da RAM (valor atual das dezenas de horas)
STA R1, @20                    #Salva o valor do R1 no endereço 20 da RAM (valor atual das unidades de horas)
LDA R0, @352                   #Carrega o valor do KEY0 em R0
CEQ R0, @1                     #Compara o valor de R0 com a posição 1 (1)
JEQ @186           #Se for igual, pula para SETHora (Setar horas)
STA R1, @19                    #Salva o valor do R1 no endereço 19 da RAM (valor atual das dezenas de minutos)
STA R1, @18                    #Salva o valor do R1 no endereço 18 da RAM (valor atual das unidades de minutos)
STA R1, @17                    #Salva o valor do R1 no endereço 17 da RAM (valor atual das dezenas de segundos)
STA R1, @16                    #Salva o valor do R1 no endereço 16 da RAM (valor atual das unidades de segundos)
RET
NOP
LDA R1, @0                     #Carrega o valor do endereço 0 da RAM em R1 (0)
STA R1, @19                    #Salva o valor do R1 no endereço 19 da RAM (valor atual das dezenas de minutos)
STA R1, @18                    #Salva o valor do R1 no endereço 18 da RAM (valor atual das unidades de minutos)
LDA R0, @352                   #Carrega o valor do KEY0 em R0
CEQ R0, @1                     #Compara o valor de R0 com a posição 1 (1)
JEQ @201           #Se for igual, pula para SETMin (Setar minutos)
JMP @125           #Se for diferente, pula para UniHora (Incremento das unidades de horas)
NOP
LDA R1, @0                     #Carrega o valor do endereço 0 da RAM em R1 (0)
STA R1, @17                    #Salva o valor do R1 no endereço 17 da RAM (valor atual das dezenas de segundos)
STA R1, @16                    #Salva o valor do R1 no endereço 16 da RAM (valor atual das unidades de segundos)
LDA R0, @352                   #Carrega o valor do KEY0 em R0
CEQ R0, @1                     #Compara o valor de R0 com a posição 1 (1)
JEQ @216           #Se for igual, pula para SETSeg (Setar segundos)
JMP @103           #Se for diferente, pula para UniMin (Incremento das unidades de minutos)
NOP
STA @510                       #Limpa KEY 1
STA @511                       #Limpa KEY 0
LDA R1, @20                    #Carrega o valor do endereço 20 da RAM em R1 (valor atual das unidades de horas)
STA R1, @292                   #Salva o valor do R1 no endereço 292 (valor atual das unidades de horas)
LDA R1, @21                    #Carrega o valor do endereço 21 da RAM em R1 (valor atual das dezenas de horas)
STA R1, @293                   #Salva o valor do R1 no endereço 293 (valor atual das dezenas de horas)
NOP
LDA R0, @352                   #Carrega o valor do KEY0 em R0
CEQ R0, @1                     #Compara o valor de R0 com a posição 1 (1)
JEQ @125           #Se for igual, pula para UniHora (Incremento das unidades de horas)
LDA R0, @353                   #Carrega o valor do KEY1 em R0
CEQ R0, @0                     #Compara o valor de R0 com a posição 0 (0)
JEQ @193           #Se for igual, pula para Hora (Incremento das horas)
STA @510                       #Limpa KEY 1
NOP
STA @510                       #Limpa KEY 1
STA @511                       #Limpa KEY 0  
LDA R1, @18                    #Carrega o valor do endereço 18 da RAM em R1 (valor atual das unidades de minutos)
STA R1, @290                   #Salva o valor do R1 no endereço 290 (valor atual das unidades de minutos)
LDA R1, @19                    #Carrega o valor do endereço 19 da RAM em R1 (valor atual das dezenas de minutos)
STA R1, @291                   #Salva o valor do R1 no endereço 291 (valor atual das dezenas de minutos)
NOP
LDA R0, @352                   #Carrega o valor do KEY0 em R0
CEQ R0, @1                     #Compara o valor de R0 com a posição 1 (1)
JEQ @103           #Se for igual, pula para UniMin (Incremento das unidades de minutos)
LDA R0, @353                   #Carrega o valor do KEY1 em R0
CEQ R0, @0                     #Compara o valor de R0 com a posição 0 (0)
JEQ @208           #Se for igual, pula para Min (Incremento dos minutos)
STA @510                       #Limpa KEY 1
NOP
STA @510                       #Limpa KEY 1
STA @511                       #Limpa KEY 0
LDA R1, @16                    #Carrega o valor do endereço 16 da RAM em R1 (valor atual das unidades de segundos)
STA R1, @288                   #Salva o valor do R1 no endereço 288 (valor atual das unidades de segundos)
LDA R1, @17                    #Carrega o valor do endereço 17 da RAM em R1 (valor atual das dezenas de segundos)
STA R1, @289                   #Salva o valor do R1 no endereço 289 (valor atual das dezenas de segundos)
NOP
LDA R0, @352                   #Carrega o valor do KEY0 em R0
CEQ R0, @1                     #Compara o valor de R0 com a posição 1 (1)
JEQ @81           #Se for igual, pula para UniSeg (Incremento das unidades de segundos)
LDA R0, @353                   #Carrega o valor do KEY1 em R0
CEQ R0, @0                     #Compara o valor de R0 com a posição 0 (0)
JEQ @223           #Se for igual, pula para Seg (Incremento dos segundos)
STA @510                       #Limpa KEY 1
RET
